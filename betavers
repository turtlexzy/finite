local Testing = false
-- Cmds
if table.find(getgenv().Alts,game.Players.LocalPlayer.UserId) then
	getgenv().PointInTable = table.find(getgenv().Alts,game.Players.LocalPlayer.UserId)
else
	return
end
if game.Players.LocalPlayer.Name == getgenv().HostUser or getgenv().Executed then
	return
end
UserSettings().GameSettings.MasterVolume = 0
local Crashed = false
if Testing == false then

-- Instances:
local Cover = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Finite = Instance.new("TextLabel")
local Wallet = Instance.new("TextLabel")

-- Properties:
Cover.Name = "Cover"
Cover.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Cover.IgnoreGuiInset = true

Frame.Parent = Cover
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.Size = UDim2.new(1, 0, 1, 0)

Finite.Name = "Finite"
Finite.Parent = Frame
Finite.BackgroundColor3 = Color3.new(1, 1, 1)
Finite.BackgroundTransparency = 1
Finite.BorderColor3 = Color3.new(0, 0, 0)
Finite.BorderSizePixel = 0
Finite.Position = UDim2.new(0.418832183, 0, 0.365740746, 0)
Finite.Size = UDim2.new(0, 282, 0, 110)
Finite.Font = Enum.Font.SourceSansItalic
Finite.Text = "Finite"
Finite.TextColor3 = Color3.new(1, 1, 1)
Finite.TextScaled = true
Finite.TextSize = 14
Finite.TextWrapped = true

Wallet.Name = "Wallet"
Wallet.Parent = Frame
Wallet.BackgroundColor3 = Color3.new(1, 1, 1)
Wallet.BackgroundTransparency = 1
Wallet.BorderColor3 = Color3.new(0, 0, 0)
Wallet.BorderSizePixel = 0
Wallet.Position = UDim2.new(0.431629241, 0, 0.540123463, 0)
Wallet.Size = UDim2.new(0, 254, 0, 61)
Wallet.Font = Enum.Font.SourceSansItalic
Wallet.Text = "Wallet:"
Wallet.TextColor3 = Color3.new(1, 1, 1)
Wallet.TextScaled = true
Wallet.TextSize = 14
Wallet.TextWrapped = true

-- Format number with commas
local function formatNumber(value)
    local formatted = value
    while true do  
        formatted, k = string.gsub(formatted, "^(-?%d+)(%d%d%d)", '%1,%2')
        if (k == 0) then
            break
        end
    end
    return formatted
end

-- Table to store connections
local cashValueConnections = {}

-- Main logic
local playerName = game.Players.LocalPlayer.Name
local player = game:GetService('Players'):FindFirstChild(playerName)
if player then
    local cashValue = player:FindFirstChild('DataFolder'):FindFirstChild('Currency')
    if cashValue then
        Wallet.Text = 'Cash: ' .. formatNumber(cashValue.Value)

        -- Remove previous connections to avoid multiple event listeners
        if cashValueConnections[cashValue] then
            cashValueConnections[cashValue]:Disconnect()
        end

        -- Set up the listener for value changes
        cashValueConnections[cashValue] = cashValue.Changed:Connect(function(newValue)
            Wallet.Text = 'Cash: ' .. formatNumber(newValue)
        end)
    end
end


	if not game:IsLoaded() then
		repeat wait(.1) until game:IsLoaded() 
	end
	local vu = game:GetService("VirtualUser")
	game:GetService("Players").LocalPlayer.Idled:connect(function()
		vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	end)
	game:GetService("RunService"):Set3dRenderingEnabled(true)
	setfpscap(5)
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/MsorkyScripts/OpenSourceAntiCheat/main/AntiCheatBypass.txt"))()
getgenv().Executed = true


local Connections = {}

local Services = {
	["RP"] = game:GetService("ReplicatedStorage"),
	["Players"] = game:GetService("Players"),
}

local Variables = {
	HostUser = getgenv().HostUser,
	Player = game.Players.LocalPlayer,
}

local Host = Services["Players"]:FindFirstChild(Variables["HostUser"])

if not Host then
	print("Host is not here waiting for him to join!")
	Services["Players"]:WaitForChild(Variables["HostUser"],9e9)
	Host = Services["Players"]:FindFirstChild(Variables["HostUser"])
end
print("Script loaded!")
local CmdSettings = {}

local function Drop(Type)
	if Type == true and CmdSettings["Dropping"] == nil then
		CmdSettings["Dropping"] = true
		CmdSettings["CustomDrop"] = nil
		CmdSettings["Aura"] = nil
		while CmdSettings["Dropping"] do
			local args = {
				[1] = "DropMoney",
				[2] = "10000"
			}
			game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
			wait(2.5)
		end
	elseif Type == false then
		CmdSettings["Dropping"] = nil
		CmdSettings["CustomDrop"] = nil
	end
end

local function AirLock(Type)
	if CmdSettings["AirLock"] == nil and Type == true then
		local BP = Variables["Player"].Character.HumanoidRootPart:FindFirstChild("AirLockBP")
		if BP then
			BP:Destroy()
		end
		CmdSettings["AirLock"] = true
		Variables["Player"].Character.HumanoidRootPart.CFrame = Variables["Player"].Character.HumanoidRootPart.CFrame*CFrame.new(0,10,0)
		local BP = Instance.new("BodyPosition",Variables["Player"].Character.HumanoidRootPart)
		BP.Name = "AirLockBP"
		BP.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
		BP.Position = Variables["Player"].Character.HumanoidRootPart.Position
	elseif CmdSettings["AirLock"] == true and Type == false then
		CmdSettings["AirLock"] = nil
		local BP = Variables["Player"].Character.HumanoidRootPart:FindFirstChild("AirLockBP")
		if BP then
			BP:Destroy()
		end
	end
end

local function GetPlayerFromString(str,ignore)
	for i,Targ in pairs(game.Players:GetPlayers()) do 
		if not ignore and Targ == Variables["Player"] then
			continue
		end
		if Targ.Name:lower():sub(1,#str) == str:lower() or  Targ.DisplayName:lower():sub(1,#str) == str:lower()  then
			return Targ
		end
	end
	return nil
end
local function BringPlr(Target,POS)
	if getgenv().PointInTable == 1 and Target.Character and Target.Character:FindFirstChild("Humanoid") then
		CmdSettings["Aura"] = nil

		local TargetPlr = Target

		local c = game.Players.LocalPlayer.Character
		local Root = c.HumanoidRootPart
		local PrevCF = Root.CFrame
		local TargetChar = TargetPlr.Character
		if TargetPlr and TargetPlr.Character and TargetPlr.Character:FindFirstChild("Humanoid") and not ( not c or not c:FindFirstChild("BodyEffects") or not c.BodyEffects:FindFirstChild("K.O") or not c.BodyEffects:FindFirstChild("Grabbed")  or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or not TargetChar.BodyEffects:FindFirstChild("K.O") or TargetChar.BodyEffects["K.O"].Value == true ) then
			CmdSettings["IsLocking"] = true

			c.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)

			Root.CFrame = CFrame.new(TargetChar.HumanoidRootPart.Position)*CFrame.new(0,0,1)

			repeat wait()
				Root.CFrame = CFrame.new(TargetChar.HumanoidRootPart.Position)*CFrame.new(0,0,1)
				if not c:FindFirstChild("Combat") then
					c.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack.Combat)     
				end
				c.Combat:Activate()
			until not TargetPlr or not TargetChar or not c or not c:FindFirstChild("BodyEffects") or not c.BodyEffects:FindFirstChild("K.O") or not c.BodyEffects:FindFirstChild("Grabbed")  or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or not TargetChar.BodyEffects:FindFirstChild("K.O") or TargetChar.BodyEffects["K.O"].Value == true
			Root.CFrame = CFrame.new(TargetChar.LowerTorso.Position)*CFrame.new(0,3,0)
			if c.BodyEffects.Grabbed.Value ~= nil then

			else
				if not (not TargetPlr or not TargetChar or not c or not c:FindFirstChild("BodyEffects") or not c.BodyEffects:FindFirstChild("K.O") or not c.BodyEffects:FindFirstChild("Grabbed")  or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or not TargetChar.BodyEffects:FindFirstChild("K.O") or TargetChar.BodyEffects["K.O"].Value == false ) then
					local args = {
						[1] = "Grabbing",
						[2] = false
					}

					game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
				end

			end
			repeat wait(0.35)
				if not (not TargetPlr or not TargetChar or not c or not c:FindFirstChild("BodyEffects") or not c.BodyEffects:FindFirstChild("K.O") or not c.BodyEffects:FindFirstChild("Grabbed")  or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or not TargetChar.BodyEffects:FindFirstChild("K.O") or TargetChar.BodyEffects["K.O"].Value == false ) then
					Root.CFrame = CFrame.new(TargetChar.LowerTorso.Position)*CFrame.new(0,3,0)
					if c.BodyEffects.Grabbed.Value ~= nil then

					else
						if not (not TargetPlr or not TargetChar or not c or not c:FindFirstChild("BodyEffects") or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or TargetChar.BodyEffects["K.O"].Value == false)  then
							local args = {
								[1] = "Grabbing",
								[2] = false
							}
							game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
						end
					end
				end
			until not TargetPlr or not TargetChar or not c or not c:FindFirstChild("BodyEffects") or not c.BodyEffects:FindFirstChild("K.O") or not c.BodyEffects:FindFirstChild("Grabbed")  or c.BodyEffects["K.O"].Value == true or c.BodyEffects.Grabbed.Value ~= nil or not TargetChar or not TargetChar:FindFirstChild("BodyEffects") or not TargetChar.BodyEffects:FindFirstChild("K.O") or TargetChar.BodyEffects["K.O"].Value == false 
			if POS == nil then
				Root.CFrame = Host.Character.HumanoidRootPart.CFrame
			else
				Root.CFrame = POS
			end
			CmdSettings["IsLocking"] = nil
			wait(1.5)
			local args = {
				[1] = "Grabbing",
				[2] = false
			}

			game:GetService("ReplicatedStorage").MainEvent:FireServer(unpack(args))
		end
	end
end

local BringLocations = {
	["bank"] = CFrame.new(-396.988922, 21.7570763, -293.929779, -0.102468058, -1.9584887e-09, -0.994736314, 7.23731564e-09, 1, -2.71436984e-09, 0.994736314, -7.47735651e-09, -0.102468058),
	["klub"] = CFrame.new(-264.434479, 0.0355005264, -430.854736, -0.999828756, 9.58909574e-09, -0.0185054261, 9.92017934e-09, 1, -1.77993904e-08, 0.0185054261, -1.79799198e-08, -0.999828756),	
	["vault"] = CFrame.new(-495.485901, 23.1428547, -284.661713, -0.0313318223, -4.10440322e-08, 0.999509037, 2.18453966e-08, 1, 4.17489829e-08, -0.999509037, 2.31427428e-08, -0.0313318223),
	["train"] = CFrame.new(591.396118, 34.5070686, -146.159561, 0.0698467195, -4.91725913e-08, -0.997557759, 5.03374231e-08, 1, -4.57684664e-08, 0.997557759, -4.70177071e-08, 0.0698467195),	
}

local SetupsTable = {
	Bank = {
		Origin = CFrame.new(-386.826202, 21.2503242, -325.340912, 0.998742342, 0, -0.0501373149, 0, 1, 0, 0.0501373149, 0, 0.998742342)*CFrame.new(0,0,-3),
		ZMultiplier = 3,
		XMultiplier = 8,
		PerRow = 10,
		Rows = 4,
	},
	Klub = {
		Origin = CFrame.new(-237.016571, -4.87585974, -411.940063, 0.994918466, -1.5840282e-08, -0.100683607, 6.8329018e-09, 1, -8.9807088e-08, 0.100683607, 8.86627731e-08, 0.994918466),
		ZMultiplier = 6,
		XMultiplier = -12,
		PerRow = 10,
		Rows = 4,
	},
	Vault = {
		Origin = CFrame.new(-519.201355, 23.1994667, -292.362, -0.0597927198, 6.70288927e-08, -0.998210788, 2.96872589e-08, 1, 6.53707701e-08, 0.998210788, -2.57254467e-08, -0.0597927198),
		ZMultiplier = -2.5,
		XMultiplier = 4,
		PerRow = 10,
		Rows = 4,
	},
	Train = {
		Origin = CFrame.new(606.527588, 34.5070801, -159.083542, 0.0376962014, -7.60452892e-08, 0.999289274, 6.54496404e-08, 1, 7.36304173e-08, -0.999289274, 6.26275352e-08, 0.0376962014),
		ZMultiplier = 5,
		XMultiplier = -7,
		PerRow = 10,
		Rows = 4,
	}
}
local function Setup(Type,Debugmode)
	CmdSettings["Aura"] = nil
	if Debugmode then
		for PointInTable = 1,40 do
			local Table = SetupsTable[Type]

			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Table["Origin"]

			local XAxis 
			local ZAxis
			local i 
			if PointInTable <= 10 then
				i = 1
			elseif PointInTable <= 20 then
				i = 2
			elseif PointInTable <= 30 then
				i = 3
			elseif PointInTable <= 40 then
				i = 4
			end
			if i == 1 then
				if PointInTable <= Table["PerRow"]   then
					XAxis = 0
					if PointInTable == 1 then
						ZAxis = 0
					else
						ZAxis = (PointInTable-1)*Table["ZMultiplier"]
					end

				end
			else
				local index = i*Table["PerRow"]
				if (Table["PerRow"]*i) >= PointInTable then
					XAxis = (i-1)*Table["XMultiplier"]
					ZAxis = (i*Table["PerRow"]-PointInTable)*Table["ZMultiplier"]

				end
			end


			game.Players.LocalPlayer.Character.Archivable = true
			local clone = game.Players.LocalPlayer.Character:Clone()
			clone.Parent = workspace
			clone.HumanoidRootPart.CFrame = Table["Origin"]*CFrame.new(XAxis,0,ZAxis)
		end
	else
		local Table = SetupsTable[Type]

		local PointInTable = getgenv().PointInTable
		local XAxis 
		local ZAxis
		local i
		if PointInTable <= 10 then
			i = 1
		elseif PointInTable <= 20 then
			i = 2
		elseif PointInTable <= 30 then
			i = 3
		elseif PointInTable <= 40 then
			i = 4
		end

		if i == 1 then
			if PointInTable <= Table["PerRow"]   then
				XAxis = 0
				if PointInTable == 1 then
					ZAxis = 0
				else
					ZAxis = (PointInTable-1)*Table["ZMultiplier"]
				end

			end
		else
			local index = i*Table["PerRow"]
			if (Table["PerRow"]*i) >= PointInTable then
				XAxis = (i-1)*Table["XMultiplier"]
				ZAxis = (i*Table["PerRow"]-PointInTable)*Table["ZMultiplier"]

			end
		end


		Variables["Player"].Character.HumanoidRootPart.CFrame = Table["Origin"]*CFrame.new(XAxis,0,ZAxis)
	end

end


local function ShowWallet()
	local Player = game.Players.LocalPlayer
	if Player.Backpack:FindFirstChild("Wallet") then
		Player.Character.Humanoid:EquipTool(Player.Backpack.Wallet)
	end
end
local function RemoveWallet()
	local Player = game.Players.LocalPlayer
	if Player.Character:FindFirstChild("Wallet") then
		Player.Character.Humanoid:UnequipTools()
	end
end
local CurrAnim
local AbbreviationOptions = {
	["k"] = 1000,
	["m"] = 1000000
}

local function GetNumberFromText(str)
	str = string.lower(str)
	if str:find("k") then
		local newStr = string.gsub(str, "k", "")
		return tonumber(newStr)*AbbreviationOptions["k"]
	elseif str:find("m") then
		local newStr = string.gsub(str, "m", "")
		return tonumber(newStr)*AbbreviationOptions["m"]
	end
	return tonumber(str)
end
local DropFolder = workspace.Ignored:FindFirstChild("Drop")

local function Initiate()
	CurrAnim = nil
	for Index,Var in pairs(CmdSettings) do
		CmdSettings[Var] = nil
	end
	CmdSettings = {}
	for Index,Connection in pairs(Connections) do
		Index[Connection] = nil
		Connection:Disconnect()
	end
	Connections["OnChat"] = game.ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(data)
 		local Message = data.Message
		local plr = game:service"Players"[data.FromSpeaker]
		if plr.Name ~= getgenv().HostUser then
			return
		end
 		Message = string.lower(Message)
		local Args = string.split(Message," ")
		local AmountOfArgs = #Args
		if Host and not Crashed and Variables["Player"].Character and Variables["Player"].Character:FindFirstChild("HumanoidRootPart") and Variables["Player"].Character:FindFirstChild("Humanoid") and Variables["Player"].Character.Humanoid.Health > 0 then
			if Args[1] == ".drop" then
				Drop(true)
			elseif not CmdSettings["AdOn"] and Args[1] == "/ad" and Args[2] == "on" then
				local newStr = string.gsub(Message, "/ad on", "")
				CmdSettings["AdOn"] = true
				while CmdSettings["AdOn"] do
					game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(newStr, 'All'); 
					wait(1.5)	
				end
			elseif Message == "/ad off" then				
				CmdSettings["AdOn"] = nil
			elseif Message == "/loopdel" then
				if DropFolder then
					DropFolder:Destroy()
					DropFolder = nil
				end
			elseif Message == "/circle host" and Host and Host.Character and Host.Character:FindFirstChild("Humanoid") and Host.Character.Humanoid.Health > 0 then
				local angle = 0
				local cfr = Host.Character.HumanoidRootPart.CFrame*CFrame.new(0,1,0)
				local Index = 0
				local size = 3

				local PointInTable = getgenv().PointInTable

				local ZAxis
				local angle = 0
				if PointInTable <= 10 then
					ZAxis = 2
					angle = (10-PointInTable)
				elseif PointInTable <= 20 then
					ZAxis = -1
					angle = (20-PointInTable)
				elseif PointInTable <= 30 then
					ZAxis = -4
					angle = (30-PointInTable)
				elseif PointInTable <= 40 then
					ZAxis = -8
					angle = (40-PointInTable)
				end
				angle = angle*36
				local Clone = game.Players.LocalPlayer.Character
				Clone.HumanoidRootPart.CFrame = cfr * CFrame.fromEulerAnglesXYZ(0,math.rad(angle),0) * CFrame.new(0,-size,-10)
				Clone.HumanoidRootPart.CFrame=Clone.HumanoidRootPart.CFrame*CFrame.new(0,0,2)
				Clone.HumanoidRootPart.CFrame=Clone.HumanoidRootPart.CFrame*CFrame.Angles(0,math.rad(180),0)

			elseif Args[1] == ".crash" and Args[2] == "15min" and not Crashed then
				local Player = GetPlayerFromString(Args[3],true)
				if Player and Player == game.Players.LocalPlayer then
					if game.CoreGui:FindFirstChild("RenderScreen") then
						game.CoreGui.RenderScreen:Destroy()
					end
					game:GetService("RunService"):Set3dRenderingEnabled(true)
					Crashed = true
					loadstring(game:HttpGet("https://raw.githubusercontent.com/remorseW/encryptW/main/DahooSuperQuickCrash.lua"))()

					for Index,Var in pairs(CmdSettings) do
						CmdSettings[Var] = nil
					end
					CmdSettings = {}
					setfpscap(60)
					wait(1)
					setfpscap(60)
					wait(1)
					setfpscap(60)
					wait(1)
					setfpscap(60)	
				end
			elseif Args[1] == "/stopdrop" then
				Drop(false)
			elseif Args[1] == "/reset" then
				if Variables["Player"].Character then
					local FULLY_LOADED_CHAR = Variables["Player"].Character:FindFirstChild("FULLY_LOADED_CHAR")
					if FULLY_LOADED_CHAR then
						FULLY_LOADED_CHAR.Parent = Services["RP"]
						FULLY_LOADED_CHAR:Destroy()
					end
					Variables["Player"].Character:Destroy()
				end
				Initiate()
			elseif Args[1] == "/airlock" then
				AirLock(true)
			elseif Args[1] == "/stopairlock" then
				AirLock(false)
			elseif Message == "/bring" then
				-- didnt feel the need for a function lmao
				if Host and Host.Character and Host.Character:FindFirstChild("HumanoidRootPart") then
					Variables["Player"].Character.HumanoidRootPart.CFrame = Host.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-1)
				end
			elseif Args[1] == "/bring" and Args[2] == "host" and BringLocations[string.lower(Args[3])] then
				BringPlr(Host,BringLocations[string.lower(Args[3])])
			elseif Args[1] == "/bring" and BringLocations[string.lower(Args[3])] then
				local FoundPlayer = GetPlayerFromString(Args[2])
				if FoundPlayer then
					BringPlr(FoundPlayer,BringLocations[string.lower(Args[3])])
				end
			elseif Args[1] == "/bring" and Args[3] == "host" then
				local FoundPlayer = GetPlayerFromString(Args[2])
				if FoundPlayer then
					BringPlr(FoundPlayer,nil)
				end
			elseif Message == "/setup bank" then
				Setup("Bank")
			elseif Message == "/setup klub" then
				Setup("Klub")
			elseif Message == "/setup vault" then
				Setup("Vault")
			elseif Message == "/setup train" then
				Setup("Train")
			elseif Message == "/wallet on" then
				ShowWallet()
			elseif Message == "/wallet off" then
				RemoveWallet()
			elseif Args[1] == ".cdrop" and Args[2] ~= nil and not CmdSettings["CustomDrop"] then
				local Number = GetNumberFromText(Args[2]) 
				if Number and DropFolder then
					CmdSettings["Aura"] = nil
					CmdSettings["Dropping"] = false

					local OldMoney = 0
					for i,v in pairs(DropFolder:GetChildren()) do
						if v.Name == "MoneyDrop" then
							local numbers = string.gsub(v.BillboardGui.TextLabel.Text, "%D", "")
							OldMoney += numbers
						end
					end
					game.ReplicatedStorage.MainEvent:FireServer(
						"DropMoney",
						10000
					)
					CmdSettings["CustomDrop"] = true
					coroutine.wrap(function()
						repeat wait(2.5) 	
							game.ReplicatedStorage.MainEvent:FireServer(
								"DropMoney",
								10000
							)

							local Money = 0
							if DropFolder then
								for i,v in pairs(DropFolder:GetChildren()) do
									if v.Name == "MoneyDrop" then
										local numbers = string.gsub(v.BillboardGui.TextLabel.Text, "%D", "")
										Money += numbers
									end
								end 
							end

						until not DropFolder or Money >= (OldMoney+Number) or not CmdSettings["CustomDrop"]
						if CmdSettings["CustomDrop"] then
							CmdSettings["CustomDrop"] = nil
							CmdSettings["Dropping"] = nil
							game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer('Custom Drop has finished.', 'All'); 
						end
					end)()
				end
			end
		end
	end)
end

if Host then
	Initiate()
end

Services["Players"].PlayerAdded:Connect(function(Player)
	if Player.Name == Variables["HostUser"] then
		Initiate()
	end
end)
